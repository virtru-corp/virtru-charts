apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cse.fullname" . }}
  labels:
    {{- include "cse.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cse.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if eq .Values.appConfig.useSsl "true" }}
      initContainers:
        - name: "{{ .Chart.Name }}-init"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['sh', '-c', 'cp /certs/server.* /run/secrets']
          volumeMounts:
            - mountPath: /certs
              name: cse-ssl
            - mountPath: /run/secrets
              name: cse-preinstall
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.deployment.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.deployment.port }}
              {{- if eq .Values.appConfig.useSsl "true" }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.deployment.port }}
              {{- if eq .Values.appConfig.useSsl "true" }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 40
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 2
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
          - configMapRef:
              name: {{ include "cse.fullname" . }}
          env:
          - name: HMAC_TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                key: cse-hmac-token-secret
                name: {{ include "cse.fullname" . }}
          - name: HMAC_TOKEN_ID
            valueFrom:
              secretKeyRef:
                key: cse-hmac-token-id
                name: {{ include "cse.fullname" . }}
          {{- if eq .Values.appConfig.useCks "true" }}
          - name: CKS_HMAC_TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                key: cks-hmac-token-secret
                name: {{ include "cse.fullname" . }}
          - name: CKS_HMAC_TOKEN_ID
            valueFrom:
              secretKeyRef:
                key: cks-hmac-token-id
                name: {{ include "cse.fullname" . }}
          {{- end }}
          {{- if eq .Values.appConfig.useCks "false" }}
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: cse-secret-key
                name: {{ include "cse.fullname" . }}
          {{- end }}
          {{- /*include the volumes section in values.yaml if appConfig.driveLabels is enabled or if the volumes list value is defined */}}
          {{- if or (.Values.volumes) (eq .Values.appConfig.useSsl "true" ) }}
          volumeMounts:
          {{- if eq .Values.appConfig.useSsl "true" }}
          - mountPath: /run/secrets
            name: cse-preinstall
            readOnly: true
          {{- end }} 
          {{- range .Values.volumes }}
          - name: {{ .name }}
            {{- toYaml .volumeMount | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- /*include the volumes section if appConfig.useSsl is true or if the volumes list value is defined */}}
      {{- if or (.Values.volumes) (eq .Values.appConfig.useSsl "true" ) }}
      volumes:
      {{- if eq .Values.appConfig.useSsl "true" }}
      - name: cse-ssl
        secret:
          secretName: {{ include "cse.fullname" . }}
          defaultMode: 420
      - name: cse-preinstall
        emptyDir: {}
      {{- end }}
      {{- range .Values.volumes }}
      - name: {{ .name }}
        {{- toYaml .volume | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}