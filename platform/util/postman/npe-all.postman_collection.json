{
	"info": {
		"_postman_id": "9b597f41-da49-4506-81a9-739c0e148511",
		"name": "npe-all",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23744829"
	},
	"item": [
		{
			"name": "Autentication For KC Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();",
							"var bodyToken = responseJson.access_token;",
							"pm.environment.set(\"authToken\", bodyToken)",
							"",
							"pm.test(\"Access Token\", function () {",
							"    pm.expect(bodyToken).to.not.equal(null);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{entitlementClientSecret}}",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{entitlementClientId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/auth/realms/tdf/protocol/openid-connect/token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"realms",
						"tdf",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set Entity Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"resp = pm.response.json()",
							"pm.test(\"entity exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(resp.length).eq(1);",
							"    pm.environment.set(\"entityId\", resp[0][\"id\"]);",
							"});    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth/admin/realms/tdf/clients?clientId={{npe}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"tdf",
						"clients"
					],
					"query": [
						{
							"key": "clientId",
							"value": "{{npe}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Autentication for Entitlements",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();",
							"var bodyToken = responseJson.access_token;",
							"pm.environment.set(\"authToken\", bodyToken)",
							"",
							"pm.test(\"Access Token\", function () {",
							"    pm.expect(bodyToken).to.not.equal(null);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{entitlementsClientId}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{entitlementsUsername}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{entitlementsPassword}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/auth/realms/tdf/protocol/openid-connect/token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"realms",
						"tdf",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Attribute Definitions Entitlements",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"resp = pm.response.json()",
							"",
							"",
							"const entityId = pm.environment.get(\"entityId\");",
							"const postEntitlementUrl = pm.variables.get(\"baseUrl\") + \"/api/entitlements/entitlements/\" + entityId;",
							"",
							"",
							"for (i in resp){",
							"    var authority = resp[i]",
							"    var getAttrUrl = pm.variables.get(\"baseUrl\") + pm.variables.get(\"attributeServicePath\") +\"/definitions/attributes?authority=\" + authority;",
							"    console.log(\"Get attribute definitions: \" + getAttrUrl);",
							"    pm.sendRequest({",
							"            url: getAttrUrl,",
							"            method: 'GET',",
							"            header: {",
							"                'Authorization': 'Bearer ' + pm.environment.get(\"authToken\")",
							"            },",
							"        }, (error, response) => {",
							"            // console.log(error ? error : response.json());",
							"            attributeDefList = response.json();",
							"            const entitlements = []",
							"            for ( x in attributeDefList){",
							"                var attrDef = attributeDefList[x];",
							"                const authority = attrDef.authority;",
							"                const attrDefOrder = attrDef.order;",
							"                const attrName = attrDef.name;",
							"                const attrRule = attrDef.rule;",
							"                if (attrRule == 'hierarchy'){",
							"                    entitlements.push(authority + \"/attr/\" + attrName +\"/value/\" + attrDefOrder[0]);",
							"                }else{",
							"                    for ( o in attrDefOrder){",
							"                        entitlements.push(authority + \"/attr/\" + attrName +\"/value/\" + attrDefOrder[o]);",
							"                    }",
							"                }               ",
							"            }",
							"            const postEntitlementRequest = {",
							"                url: postEntitlementUrl,",
							"                method: 'POST',",
							"                header: {",
							"                    'Authorization': 'Bearer ' + pm.variables.get(\"authToken\"),",
							"                    'Content-Type': 'application/json'",
							"                },",
							"                body: {",
							"                    mode: 'raw',",
							"                    raw: JSON.stringify(entitlements)",
							"                }",
							"            };",
							"            pm.sendRequest(postEntitlementRequest, (error, response) => {",
							"                console.log(error ? error : response.json());           ",
							"            });",
							"        });    ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/attributes/authorities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"attributes",
						"authorities"
					]
				}
			},
			"response": []
		}
	]
}