apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
    {{- include "gateway.labels" . | nindent 6 }}
  serviceName:
  replicas: {{ .Values.replicaCount }}
  volumeClaimTemplates:
    - metadata:
        name: postfix-dir
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.persistentVolumeStorageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistentVolumeSize }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{ include "gateway.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if not .Values.smtp.tls.enabled }}
        - name: cert-generator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['sh', '-c', 'openssl genrsa -out /etc/postfix/tls/{{ .Values.gatewayHostname }}/client.key 2048 && openssl req -new -key /etc/postfix/tls/{{ .Values.gatewayHostname }}/client.key -x509 -subj /CN={{ .Values.gatewayHostname }} -days 3650 -out /etc/postfix/tls/{{ .Values.gatewayHostname }}/client.pem']
          volumeMounts:
          - name: cert-dir
            mountPath: /etc/postfix/tls/{{ .Values.gatewayHostname }}
        {{- end }}
      containers:
        - name: gateway # Gateway Container
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          volumeMounts:
          - name: cert-dir
            mountPath: /etc/postfix/tls/{{ .Values.gatewayHostname }}
          {{- if or .Values.dkimPublicKey .Values.dkimPrivateKey (and .Values.existingSecret.name .Values.existingSecret.dkimPrivateKeyName) }}
          - name: dkim-dir
            mountPath: /etc/opendkim/keys
          {{- end }}
          {{- if or .Values.abacExtraCas .Values.abacCaSecrets }}
          - name: abac-cas
            mountPath: /etc/virtru-gateway/abac-cas
            readOnly: true
          {{- end }}
          - name: postfix-dir
            mountPath: /var/spool/postfix
          ports:
            - containerPort: 25
              protocol: TCP
          envFrom:
          - configMapRef:
              name: {{ include "gateway.fullname" . }}
          env:
          {{- if or .Values.saslDownstreamCredentials (and .Values.existingSecret.name .Values.existingSecret.saslDownstreamCredentialsName) }}
          - name: GATEWAY_SMTP_SASL_ACCOUNTS
            valueFrom:
              secretKeyRef:
                key: {{ include "gateway.saslDownstreamCredentialsKey" . }}
                name: {{ include "gateway.saslDownstreamCredentialsSecretName" . }}
          {{- end }}
          {{- if or .Values.saslUpstreamCredentials (and .Values.existingSecret.name .Values.existingSecret.saslUpstreamCredentialsName) }}
          - name: GATEWAY_SMTPD_SASL_ACCOUNTS
            valueFrom:
              secretKeyRef:
                key: {{ include "gateway.saslUpstreamCredentialsKey" . }}
                name: {{ include "gateway.saslUpstreamCredentialsSecretName" . }}
          {{- end }}
          {{- if or .Values.xHeaderAuthSecret (and .Values.existingSecret.name .Values.existingSecret.xHeaderAuthSecretName) }}
          - name: GATEWAY_XHEADER_AUTH_SECRET
            valueFrom:
              secretKeyRef:
                key: {{ include "gateway.xHeaderAuthSecretKey" . }}
                name: {{ include "gateway.xHeaderAuthSecretName" . }}
          {{- end }}
          {{- if or .Values.abacOidcClientSecret (and .Values.existingSecret.name .Values.existingSecret.abacOidcClientSecretName) }}
          - name: GATEWAY_ABAC_OIDC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: {{ include "gateway.abacOidcClientSecretKey" . }}
                name: {{ include "gateway.abacOidcClientSecretName" . }}
          {{- end }}
          readinessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 20
          livenessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
            timeoutSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- if or .Values.abacExtraCas .Values.abacCaSecrets }}
      - name: abac-cas
        projected:
          sources:
          {{- if .Values.abacExtraCas }}
          - configMap:
              name: {{ include "gateway.fullname" . }}
              items:
              {{- range $index, $unused := .Values.abacExtraCas }}
              - key: ABAC_CA_{{ $index }}
                path: abac-ca-{{ $index }}.crt
              {{- end }}
          {{- end }}
          {{- range $index, $caSecret := .Values.abacCaSecrets }}
          - secret:
              name: {{ $caSecret.secretName }}
              items:
              - key: {{ $caSecret.keyName }}
                path: {{ $caSecret.secretName }}-{{ $caSecret.keyName }}
              optional: false
          {{- end }}
      {{- end }}
      - name: cert-dir
        {{- if .Values.smtp.tls.enabled }}
        projected:
          sources:
          - secret:
              {{- if .Values.smtp.tls.existingSecret }}
              name: {{ .Values.smtp.tls.existingSecret }}
              {{- else }}
              name: "{{ include "gateway.fullname" . }}-smtp-tls"
              {{- end }}
              items:
              - key: tls.crt
                path: client.pem
                mode: 0644
              - key: tls.key
                path: client.key
                mode: 0600
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if or .Values.dkimPublicKey .Values.dkimPrivateKey (and .Values.existingSecret.name .Values.existingSecret.dkimPrivateKeyName) }}
      - name: dkim-dir
        secret:
          defaultMode: 420
          secretName: {{ include "gateway.dkimSecretName" . }}
          {{- if and .Values.existingSecret.name .Values.existingSecret.dkimPrivateKeyName }}
          items:
          - key: {{ include "gateway.dkimPrivateKeyKey" . }}
            path: {{ .Values.dkimSelector }}._domainkey.{{ .Values.primaryMailingDomain }}.pem
          {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
