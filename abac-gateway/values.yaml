replicaCount: 2
image:
  repository: registry.opentdf.io/platform/gateway 
  pullPolicy: IfNotPresent 
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: false
  name: "default"
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
ingress:
  enabled: false
resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 500Mi
  # requests:
  #   cpu: 500m
  #   memory: 500Mi
nodeSelector: {}
tolerations: []
affinity: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
service:
  type: LoadBalancer
  loadBalancerIP: ''
  port: 25

# abacOidcClientId is the client id that gateway should use to communicate with the platform
abacOidcClientId: "" # the client id that gateway should use to communicate with the platform
# abacOiDcClientSecret is the client secret that gateway should use to communicate with the platform
abacOidcClientSecret: ""
# abacPlatformEndpoint is the URL where the platform is deployed. Hostname and port
abacPlatformEndpoint: "" # the endpoint where the platform is deployed
# abacTaggingPdpEndpoint is the URL where the tagging PDP is deployed. Hostname and port
abacTaggingPdpEndpoint: "" # the endpoint where the tagging PDP is deployed
# abacTaggingPdpAssertionType is the assertion type to use, currently `urn:us:gov:ic:edh` or `urn:nato:stanag:5636:A:1:elements:json`.
abacTaggingPdpAssertionType: "urn:nato:stanag:5636:A:1:elements:json" # the assertion type to use with the tagging pdp, currently `urn:us:gov:ic:edh` or `urn:nato:stanag:5636:A:1:elements:json`
# abacTrimBlockedRecipients is whether we should remove header recipients that are not entitled to receive an email
abacTrimBlockedRecipients: true # remove header recipients that are not entitled to receive an email
# abacPlaintextConnection is whether we should communicate with the platform and the tagging PDP over a plaintext connection
abacPlaintextConnection: false # whether we should communicate with the platform and the tagging PDP over a plaintext connection
# abaEncryptEmail is whether we should encrypt when running in encrypt mode
abacEncryptEmail: true # whether we should encrypt when running in inbound encrypt mode. if this is not set we only do access checks and blocking
# abacEncryptEmailBody is whether we should encrypt the email body when running in encrypt mode
abacEncryptEmailBody: true # whether we should encrypt the email body when running in inbound encrypt mode. if this is not set we encrypt the attachments only
# abacExtraCas is a list of additional CAs to trust when communicating with the platform and the tagging PDP in PEM format
abacExtraCas: []

# gatewayMode is the mode the gateway should run in, either encrypt or decrypt
gatewayMode: "encrypt"
# gatewayTopology is the topology the gateway should run in, either inbound or outbound
gatewayTopology: "inbound"
# gatewayHostname is the hostname that the gateway should use. A self-signed certificate will be generated for this hostname
gatewayHostname: ""
# gatewayTransportMaps maps domains to mail servers for the next hop. e.g. example.com=>smtp.example.com,example.net=>smtp.example.net
gatewayTransportMaps: ""
# comma-separated list of CIDR addresses that are allowed to relay mail through the gateway
inboundRelayAddresses: "0.0.0.0/0"

# persistentVolumeStorageClassName is the storage class to use for the persistent volume that we use to store the email queue
persistentVolumeStorageClassName: "standard"
# persistentVolumeSize is the size of the persistent volume that we use to store the email queue
persistentVolumeSize: "1Gi"
# maxQueueLifetime is the maximum amount of time a message can stay in the queue before being bounced (postfix maximal_queue_lifetime)
maxQueueLifetime: "5m"
# maxBackoffTime is the maximum amount of time the gateway will wait before retrying a message (postfix maximal_backoff_time)
maxBackoffTime: "45s"
# minBackoffTime is the minimum amount of time the gateway will wait before retrying a message (postfix minimal_backoff_time)
minBackoffTime: "30s"
# queueRunDelay is the amount of time the gateway will wait before checking the queue for messages to send (postfix queue_run_delay)
queueRunDelay: "30s"
# primaryMailingDomain is the domain we use to rewrite the from address for inbound mail. This allows us to deliver email that is
#   authenticated by DKIM. In order for this to work DKIM must be set up for this domain
primaryMailingDomain: ""
# dkimSelector is the selector for the DKIM key to use for mail
dkimSelector: ""
# dkimPrivateKey is the private key for the DKIM key
dkimPrivateKey: ""
# replaceFromEnabled is whether the gateway should replace the from address with the authenticated address
replaceFromEnabled: false
# proxyProtocol is whether the gateway should use the proxy protocol
proxyProtocol: false
# verboseLogging is whether the gateway should log verbose information
verboseLogging: false
# xHeaderAuthSecret is the secret used to authenticate senders via xHeaders. If set the `X-Header-Virtru-Auth` header must be set to this value
#   in order to send mail through the gateway
xHeaderAuthSecret: ""
# smtpUseTls is whether the gateway should use TLS when sending mail
smtpUseTls: true
# smtpSecurityLevel is the security level the gateway should use when sending mail
smtpSecurityLevel: "mandatory"
# smtpTlsComplianceDownstream is the compliance level the gateway should use when sending mail downstream
smtpTlsComplianceDownstream: "MEDIUM"
# saslDownstreamCredentials maps usernames to passwords for downstream authentication (gateway sending email).
#   e.g. username1=>password1,username2=>password2
saslDownstreamCredentials: ""
# saslDownstreamSecurityOptions is the security options the gateway should use when authenticating downstream
saslDownstreamSecurityOptions: "noanonymous"
# saslUpstreamCredentials maps usernames to passwords for upstream authentication (gateway receiving email). e.g. username1=>password1,username2=>password2
#   e.g. username1=>password1,username2=>password2
saslUpstreamCredentials: ""
# saslUpstreamMechanisms is the mechanisms the gateway should use when receiving email
saslUpstreamMechanisms: "PLAIN"
# smtpdUseTls is whether the gateway should use TLS when receiving mail
smtpdUseTls: true
# smtpdSecurityLevel is the security level the gateway should use when receiving mail
smtpdSecurityLevel: "mandatory"
# smtpdTlsComplianceUpstream is the compliance level the gateway should use when receiving mail upstream
smtpdTlsComplianceUpstream: "MEDIUM"
# cacheSmtpConnections controls whether the gateway should cache outgoing SMTP connections. true to cache everything,
#   false to not cache anything, or a comma-separated list of domains to cache connections for
cacheSmtpConnections: true
# cacheSmtpConnectionsTimeLimit is the amount of time to cache outgoing SMTP connections for
cacheSmtpConnectionsTimeLimit: "5s"
# tlsPolicyMaps maps domains to TLS policies. e.g. example.com=>may,example.net=>encrypt. Valid policies
#   can be found here: https://www.postfix.org/TLS_README.html#client_tls_policy
tlsPolicyMaps: ""
